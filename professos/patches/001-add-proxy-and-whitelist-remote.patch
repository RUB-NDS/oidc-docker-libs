diff --git a/pom.xml b/pom.xml
index 0a4ff10..f31caf6 100644
--- a/pom.xml
+++ b/pom.xml
@@ -176,6 +176,19 @@
 			<artifactId>bcpkix-jdk15on</artifactId>
 			<version>1.62</version>
 		</dependency>
+
+		<dependency>
+			<groupId>org.jboss.resteasy</groupId>
+			<artifactId>resteasy-jaxrs</artifactId>
+			<version>3.0.13.Final</version>
+			<scope>provided</scope>
+		</dependency>
+		<dependency>
+			<groupId>org.jboss.resteasy</groupId>
+			<artifactId>resteasy-client</artifactId>
+			<version>3.0.13.Final</version>
+			<scope>provided</scope>
+		</dependency>
 	</dependencies>
 
 	<build>
diff --git a/src/main/java/de/rub/nds/oidc/browser/BrowserSimulator.java b/src/main/java/de/rub/nds/oidc/browser/BrowserSimulator.java
index 8128acb..925e169 100644
--- a/src/main/java/de/rub/nds/oidc/browser/BrowserSimulator.java
+++ b/src/main/java/de/rub/nds/oidc/browser/BrowserSimulator.java
@@ -29,6 +29,7 @@ import org.openqa.selenium.OutputType;
 import org.openqa.selenium.WebDriver;
 import org.openqa.selenium.chrome.ChromeDriver;
 import org.openqa.selenium.chrome.ChromeOptions;
+import org.openqa.selenium.remote.DesiredCapabilities;
 import org.openqa.selenium.remote.RemoteWebDriver;
 import org.openqa.selenium.remote.RemoteWebElement;
 import org.openqa.selenium.support.ui.Sleeper;
@@ -96,8 +97,12 @@ public abstract class BrowserSimulator {
 	}
 
 	protected RemoteWebDriver getDriverInstance() {
+		DesiredCapabilities capabilities = DesiredCapabilities.chrome();
 		ChromeOptions chromeOptions = new ChromeOptions();
 
+		capabilities.setCapability("network.proxy.http", "HTTP_PROXY_URL");
+		capabilities.setCapability("network.proxy.http_port", "HTTP_PROXY_PORT");
+
 		// load chromedriver config
 		System.setProperty("webdriver.chrome.driver", seleniumCfg.getString("chromedriver_path"));
 		if (seleniumCfg.hasPath("chromedriver_logfile")) {
@@ -108,12 +113,13 @@ public abstract class BrowserSimulator {
 			// do not search for chrome in OS $PATH
 			chromeOptions.setBinary(seleniumCfg.getString("chrome_browser_path"));
 		}
-
-		chromeOptions.addArguments("incognito", "headless", "no-sandbox", "disable-gpu", "window-size=1024x768");
+		chromeOptions.addArguments("incognito", "headless", "no-sandbox", "disable-gpu", "window-size=1024x768", "whitelisted-ips=''");
 		// disable certificate validation to prevent chrome from getting stuck on cert errors
 		// requires chrome >= 65 to work (ignored otherwise)
 		chromeOptions.setAcceptInsecureCerts(true);
 
+		chromeOptions.merge(capabilities);
+
 		RemoteWebDriver d = new ChromeDriver(chromeOptions);
 
 		d.manage().timeouts().implicitlyWait(NORMAL_WAIT_TIMEOUT, TimeUnit.SECONDS);
diff --git a/src/main/java/de/rub/nds/oidc/learn/TestRunner.java b/src/main/java/de/rub/nds/oidc/learn/TestRunner.java
index ed15d45..e787677 100644
--- a/src/main/java/de/rub/nds/oidc/learn/TestRunner.java
+++ b/src/main/java/de/rub/nds/oidc/learn/TestRunner.java
@@ -37,7 +37,6 @@ import org.apache.commons.lang3.RandomStringUtils;
 import javax.inject.Inject;
 import javax.ws.rs.ProcessingException;
 import javax.ws.rs.WebApplicationException;
-import javax.ws.rs.client.ClientBuilder;
 import javax.ws.rs.core.MediaType;
 import javax.ws.rs.core.Response;
 import javax.ws.rs.core.UriBuilder;
@@ -49,6 +48,9 @@ import java.util.HashMap;
 import java.util.Map;
 import java.util.Optional;
 
+import org.jboss.resteasy.client.jaxrs.ResteasyClientBuilder;
+import org.jboss.resteasy.client.jaxrs.ResteasyClient;
+import org.jboss.resteasy.client.jaxrs.engines.URLConnectionEngine;
 
 /**
  * @author Tobias Wich
@@ -245,8 +247,9 @@ public class TestRunner {
 						.replaceQuery(null)
 						.build();
 
+				ResteasyClient client = new ResteasyClientBuilder().httpEngine(new URLConnectionEngine()).build();
 				logger.log("Obtaining permission to perform test from url '" + wellKnown + "'.");
-				Response grantTokenResp = ClientBuilder.newClient().target(wellKnown)
+				Response grantTokenResp = client.target(wellKnown)
 						.request().accept(MediaType.WILDCARD).get();
 				if (grantTokenResp.getStatus() == 200 && grantTokenResp.getLength() > 0) {
 					String grantToken = grantTokenResp.readEntity(String.class);
