version: "3.6"

services:
  certs:
    build:
      context: ./oidc-cert
    environment:
      - CA_KEY=oidc-ca.key
      - CA_EXPIRE=3650
      - SSL_KEY_SIZE=2048
    env_file:
      - ".env"
    volumes:
      - certs:/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro

  mitmproxy:
    build:
      context: ./mitmproxy
    depends_on:
      - certs
    environment:
      - CA_DIR=${CA_DIR}
      - CA_CERT=${CA_CERT}
      - CA_KEY=${CA_KEY}
    dns:
      - 127.0.0.1
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./mitmproxy/scripts:/home/mitmproxy/scripts
      - certs:/certs:ro
    networks:
      - idpnet
      - rpnet
      - profnet

  professos:
    build:
      context: ./professos
      args:
        gitbranch: development
        GITHUB_TOKEN: ${GITHUB_TOKEN}
        DISABLE_TLS_TRUST_CHECK: "true"
        CA_CERT: ${CA_CERT}
        CONTROLLER_HOST: ${CONTROLLER_HOST}
        HONEST_OP_HOST: ${HONEST_OP_HOST}
        EVIL_OP_HOST: ${EVIL_OP_HOST}
        HONEST_RP_HOST: ${HONEST_RP_HOST}
        EVIL_RP_HOST: ${EVIL_RP_HOST}
        TEST_RP_HOST: ${MITREID_CLIENT_HOST}
        TEST_OP_HOST: ${MITREID_SERVER_HOST}
    environment:
      CA_DIR: ${CA_DIR}
      CA_CERT: ${CA_CERT}
    env_file:
      - .proxy_env
    depends_on:
      - certs
    ports:
      - "9990:9990"   # enable management interface
      - "8888:8080"   # web interface
      - "8787:8787"   # debugging interface
    volumes:
      - certs:/certs:ro
    networks:
      profnet:
        aliases:
          - ${CONTROLLER_HOST}
          - ${HONEST_OP_HOST}
          - ${EVIL_OP_HOST}
          - ${HONEST_RP_HOST}
          - ${EVIL_RP_HOST}

  mitreid-server:
    build:
      context: ./idp/mitreid-server
      args:
        ISSUER: ${MITREID_SERVER_HOST}
        MITREID_SERVER_HOST: ${MITREID_SERVER_HOST}
        CONTROLLER_URL: ${CONTROLLER_HOST}
    depends_on:
      - certs
    volumes:
      - certs:/certs:ro
    env_file:
      - .proxy_env
    environment:
      CA_DIR: ${CA_DIR}
      CA_CERT: ${CA_CERT}
      VIRTUAL_HOST: ${MITREID_SERVER_HOST}
    networks:
      - idpnet

  mitreid-client:
    build:
      context: ./rp/mitreid-client
      args:
        ISSUER: ${HONEST_OP_HOST}
        CONTROLLER_URL: ${CONTROLLER_HOST}
        MITREID_CLIENT_HOST: ${MITREID_CLIENT_HOST}
    depends_on:
      - certs
    volumes:
      - certs:/certs:ro
    env_file:
      - .proxy_env
    environment:
      CA_DIR: ${CA_DIR}
      CA_CERT: ${CA_CERT}
      VIRTUAL_HOST: ${MITREID_CLIENT_HOST}
    networks:
      - rpnet

networks:
  profnet:
    name: profnet
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: oidc-profnet
  idpnet:
    name: idpnet
    driver: bridge
    internal: true
    driver_opts:
      com.docker.network.bridge.name: oidc-idpnet
  rpnet:
    name: rpnet
    driver: bridge
    internal: true
    driver_opts:
      com.docker.network.bridge.name: oidc-rpnet

volumes:
  certs:
