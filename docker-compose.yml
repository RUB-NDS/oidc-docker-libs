version: "3.6"

services:
  certs:
    build:
      context: ./oicd-cert
    environment:
      - CA_KEY=oicd-ca.key
      - CA_EXPIRE=3650
      - SSL_KEY_SIZE=2048
    env_file:
      - ".env"
    volumes:
      - certs:/certs

  nginx-proxy-mitm:
    command: mitmweb --web-iface 0.0.0.0 --set web_open_browser=false --ssl-insecure
    dns:
      - 127.0.0.1
    image: artemkloko/mitm-nginx-proxy-companion
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - idpnet
      - rpnet
      - profnet

#  nginx-proxy:
#    depends_on:
#      - certs
#    image: jwilder/nginx-proxy
#    labels:
#      - "mitmproxy.proxyVirtualHosts=true"
#    volumes:
#      - certs:/etc/nginx/certs:ro
#      - /var/run/docker.sock:/tmp/docker.sock:ro
#    environment:
#      DEFAULT_HOST: professos
#      http_proxy: ${HTTP_PROXY}
#      https_proxy: ${HTTPS_PROXY}
#    networks:
#      - profnet

  professos:
    build:
      context: ./professos
      args:
        gitbranch: development
        GITHUB_TOKEN: ${GITHUB_TOKEN}
        CA_CERT: ${CA_CERT}
        CONTROLLER_HOST: ${CONTROLLER_HOST}
        HONEST_OP_HOST: ${HONEST_OP_HOST}
        EVIL_OP_HOST: ${EVIL_OP_HOST}
        HONEST_RP_HOST: ${HONEST_RP_HOST}
        EVIL_RP_HOST: ${EVIL_RP_HOST}
        TEST_RP_HOST: ${MITREID_CLIENT_HOST}
        TEST_OP_HOST: ${MITREID_SERVER_HOST}
    environment:
      VIRTUAL_HOST: professos
    depends_on:
      - certs
    volumes:
      - certs:/certs:ro
    networks:
      profnet:
        aliases:
          - ${CONTROLLER_HOST}
          - ${HONEST_OP_HOST}
          - ${EVIL_OP_HOST}
          - ${HONEST_RP_HOST}
          - ${EVIL_RP_HOST}

  mitreid-server:
    build:
      context: ./idp/mitreid-server
      args:
        ISSUER: ${MITREID_SERVER_HOST}
        MITREID_SERVER_HOST: ${MITREID_SERVER_HOST}
        CONTROLLER_URL: ${CONTROLLER_HOST}
    depends_on:
      - certs
    volumes:
      - certs:/certs:ro
    environment:
      VIRTUAL_HOST: ${MITREID_SERVER_HOST}
    networks:
      - idpnet

  mitreid-client:
    build:
      context: ./rp/mitreid-client
      args:
        CONTROLLER_URL: ${CONTROLLER_HOST}
        MITREID_CLIENT_HOST: ${MITREID_CLIENT_HOST}
    depends_on:
      - certs
    volumes:
      - certs:/certs:ro
    environment:
      VIRTUAL_HOST: ${MITREID_CLIENT_HOST}
    networks:
      - rpnet

networks:
  profnet:
    driver: bridge
  idpnet:
    internal: true
  rpnet:
    internal: true

volumes:
  certs:
