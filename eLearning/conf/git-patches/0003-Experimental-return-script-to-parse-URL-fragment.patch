From 0b3ebd4b92bbb53026c78c00edf53e4bada08c1f Mon Sep 17 00:00:00 2001
From: plokta <nils.engelbertz@rub.de>
Date: Tue, 12 Mar 2019 17:55:07 +0100
Subject: [PATCH 3/5] Experimental: return script to parse URL fragment

---
 .../nds/elearning/sso/oidc/VerifyServlet.java | 49 +++++++++++++++++++
 1 file changed, 49 insertions(+)

diff --git a/oidc/sp_webapp/src/main/java/org/rub/nds/elearning/sso/oidc/VerifyServlet.java b/oidc/sp_webapp/src/main/java/org/rub/nds/elearning/sso/oidc/VerifyServlet.java
index 5e1787e..6165bee 100644
--- a/oidc/sp_webapp/src/main/java/org/rub/nds/elearning/sso/oidc/VerifyServlet.java
+++ b/oidc/sp_webapp/src/main/java/org/rub/nds/elearning/sso/oidc/VerifyServlet.java
@@ -42,6 +42,12 @@ public class VerifyServlet extends HttpServlet {
         response.setContentType("text/html;charset=UTF-8");
         HTTPRequest oidcRequest = ServletUtils.createHTTPRequest(request);
         Map<String,String> params = oidcRequest.getQueryParameters();
+        if (!params.containsKey("code") && !params.containsKey("id_token") && !params.containsKey("error")) {
+            if (VerifyManager.isSessionImpliesFragmentResponseMode(request)) {
+                sendFragmentExtractor(request, response);
+                return;
+            }
+        }
         try {
             params.put(SP_Constants.JAVAXSERVLETREQUEST_X509_CERTIFICATE, Base64URL.encode(((X509Certificate[]) request.getAttribute(SP_Constants.JAVAXSERVLETREQUEST_X509_CERTIFICATE))[0].getEncoded()).toString()); 
         } catch (CertificateEncodingException | NullPointerException ex) {
@@ -53,6 +59,49 @@ public class VerifyServlet extends HttpServlet {
         request.getSession(true).setAttribute("authBean", authBean);
     }
 
+    protected void sendFragmentExtractor(HttpServletRequest request, HttpServletResponse response) throws IOException {
+        // source: https://openid.net/specs/openid-connect-core-1_0.html#FragmentNotes
+        String content = "<!DOCTYPE html><html><head><title>Fragment Response Submitter</title></head><body>\n" +
+                "<h1>Extract URL Fragment</h1><noscript>Please enable JavaScript!</noscript>\n\n" +
+                "  <script type=\"text/javascript\">\n" +
+                "\n" +
+                "  // First, parse the query string\n" +
+                "  var params = {}, postBody = location.hash.substring(1),\n" +
+                "      regex = /([^&=]+)=([^&]*)/g, m;\n" +
+                "  while (m = regex.exec(postBody)) {\n" +
+                "    params[decodeURIComponent(m[1])] = decodeURIComponent(m[2]);\n" +
+                "  }\n" +
+                "\n" +
+                "  // And send the token over to the server\n" +
+                "  var req = new XMLHttpRequest();\n" +
+                "  // using POST so query isn't logged\n" +
+                "  req.open('POST', 'http://' + window.location.host +\n" +
+                "                   '/oidc_sp/verify', true);\n" + //TODO: replace dynamically
+                "  req.setRequestHeader('Content-Type',\n" +
+                "                       'application/x-www-form-urlencoded');\n" +
+                "\n" +
+                "  req.onreadystatechange = function (e) {\n" +
+                "    if (req.readyState == 4) {\n" +
+                "      if (req.status == 200) {\n" +
+                "  // If the response from the POST is 200 OK, perform a redirect\n" +
+                "        window.location = 'http://'\n" +
+                "          + window.location.host + '/oidc_sp/faces/success/index.xhtml'\n" + //TODO: replace dynamically
+                "      }\n" +
+                "  // if the OAuth response is invalid, generate an error message\n" +
+                "      else if (req.status == 400) {\n" +
+                "        alert('There was an error processing the token')\n" +  // TODO: do not alert!
+                "      } else {\n" +
+                "        alert('Something other than 200 was returned')\n" +
+                "      }\n" +
+                "    }\n" +
+                "  };\n" +
+                "  req.send(postBody);\n" +
+                " </script></body></html>";
+        response.setHeader("Content-Type", "text/html");
+        response.getWriter().write(content);
+        response.flushBuffer();
+    }
+
     // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
     /**
      * Handles the HTTP <code>GET</code> method.
-- 
2.17.1

