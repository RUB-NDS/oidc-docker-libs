From 0aaf318fdf93991dfe9b4cc03aab204d47a92829 Mon Sep 17 00:00:00 2001
From: plokta <nils.engelbertz@rub.de>
Date: Tue, 12 Mar 2019 18:14:41 +0100
Subject: [PATCH 4/5] client auth: convert AuthHeader->QueryParams

---
 .../oidc/idp/manager/TokenEndpointManager.java | 18 +++++++++++++++++-
 .../sso/oidc/idp/misc/TokenGenerator.java      |  2 +-
 2 files changed, 18 insertions(+), 2 deletions(-)

diff --git a/oidc/idp_lib/src/main/java/org/rub/nds/elearning/sso/oidc/idp/manager/TokenEndpointManager.java b/oidc/idp_lib/src/main/java/org/rub/nds/elearning/sso/oidc/idp/manager/TokenEndpointManager.java
index 93e75b8..f60314a 100644
--- a/oidc/idp_lib/src/main/java/org/rub/nds/elearning/sso/oidc/idp/manager/TokenEndpointManager.java
+++ b/oidc/idp_lib/src/main/java/org/rub/nds/elearning/sso/oidc/idp/manager/TokenEndpointManager.java
@@ -6,7 +6,11 @@ import com.nimbusds.openid.connect.sdk.AuthenticationSuccessResponse;
 import com.nimbusds.openid.connect.sdk.OIDCTokenResponse;
 import com.nimbusds.openid.connect.sdk.token.OIDCTokens;
 import java.net.URISyntaxException;
+import java.nio.charset.Charset;
+import java.util.Base64;
 import java.util.Map;
+
+import org.apache.commons.lang3.StringUtils;
 import org.rub.nds.elearning.sso.oidc.exceptions.ClientNotFoundException;
 import org.rub.nds.elearning.sso.oidc.exceptions.IdPVerifierNotFoundException;
 import org.rub.nds.elearning.sso.oidc.exceptions.TokenRequestException;
@@ -22,8 +26,20 @@ public class TokenEndpointManager {
 
     public static HTTPResponse tokenRequest(HTTPRequest request) throws URISyntaxException {
         Map<String, String> params = request.getQueryParameters();
-        HTTPResponse httpResponse = null;
+        HTTPResponse httpResponse = new HTTPResponse(500);
 
+        if (!params.containsKey("client_secret")) {
+            // check authorization header
+            String auth = request.getAuthorization().replace("Basic ", "");
+            if (auth != null && !auth.isEmpty()) {
+                auth = new String(Base64.getDecoder().decode(auth), Charset.forName("ASCII"));
+                String[] creds = auth.split(":");
+                if (creds.length == 2) {
+                    params.put("client_id", creds[0]);
+                    params.put("client_secret", creds[1]);
+                }
+            }
+        }
         if (!isRequredParametersSet(params)) {
             httpResponse.setContent("One or multiple required parameters (redirect_uri, client_id, client_secret) are not set!");
         }
diff --git a/oidc/idp_lib/src/main/java/org/rub/nds/elearning/sso/oidc/idp/misc/TokenGenerator.java b/oidc/idp_lib/src/main/java/org/rub/nds/elearning/sso/oidc/idp/misc/TokenGenerator.java
index 9856a85..b4c5005 100644
--- a/oidc/idp_lib/src/main/java/org/rub/nds/elearning/sso/oidc/idp/misc/TokenGenerator.java
+++ b/oidc/idp_lib/src/main/java/org/rub/nds/elearning/sso/oidc/idp/misc/TokenGenerator.java
@@ -73,7 +73,7 @@ public class TokenGenerator {
         idTokenClaims.setAccessTokenHash(AccessTokenHash.compute(accessToken, JWSAlgorithm.HS256));
         idTokenClaims.setCodeHash(CodeHash.compute(code, JWSAlgorithm.HS256));
         idTokenClaims.setNonce(new Nonce(params.get(IdP_Constants.nonce_param)));
-        if (params.get(IdP_Constants.idp_verifier_param).equals("6")) {
+        if ("6".equals(params.get(IdP_Constants.idp_verifier_param))) {
             idTokenClaims.setClaim("hok", params.get(IdP_Constants.JAVAXSERVLETREQUEST_X509_CERTIFICATE));
         }
         JWSHeader header = new JWSHeader(JWSAlgorithm.RS256);
-- 
2.17.1

